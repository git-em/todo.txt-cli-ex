#!/bin/bash
export COLOR_CONTEXT=${COLOR_CONTEXT-'\\033[35m'}
export COLOR_TASKNUM=${COLOR_TASKNUM-$DEFAULT'\\033[47m'}
export COLOR_PROJECT=${COLOR_PROJECT-'\\033[1;34m'}
export COLOR_DATE=${COLOR_DATE-$CYAN}
export COLOR_ALTERNATING=${COLOR_ALTERNATING-$DEFAULT'\\033[47m'}

if [ $TODOTXT_PLAIN -eq 0 ]; then
awk --re-interval '
function highlight(colorVar,      color) {
    color = ENVIRON[colorVar]
    gsub(/\\+033/, "\033", color)
    return color
}
function highlightend(colorVar, defaultColor,      color) {
    color = highlight(colorVar "_END")
    if (color == "") {
        return defaultColor
    } else {
        return color
    }
}
function getLineColor(      hl) {
    if (match($0, /[0-9]+ /) > 1) {
        return substr($0, 1, RSTART - 1)
    } else {
        return highlight("DEFAULT")
    }
}
{
    lineColor = getLineColor()

    # Highlight alternating lines. 
    if (NR % 2 == 0 && lineColor == highlight("DEFAULT")) {
        lineColor = highlight("COLOR_ALTERNATING")
        $0 = highlight("COLOR_ALTERNATING") $0 highlightend("COLOR_ALTERNATING", lineColor)
    }

    netTask = substr($0, length(lineColor) + 1)
    if (! match(netTask, /^[0-9]+ x /)) {
        # Lazy-initialize task number width. 
        if (taskNumWidth <= 0) {
            match(netTask, /[0-9]+ /)
            taskNumWidth = RLENGTH - 1
        }

        # Highlight current task number. 
        $0 = gensub(/([0-9]+) /, highlight("COLOR_TASKNUM") "\\1" highlightend("COLOR_TASKNUM", lineColor) " ", " ")

        # Highlight any w:42 references to other tasks, and normalize number
        # width to e.g. w:042. 
        for (i = 1; i <= NF; i++) {
            taskNum = gensub(/^w:([0-9]+)/, "\\1", "", $i)
            if (taskNum == $i) continue
            newTaskNum = sprintf("%0" taskNumWidth "d", taskNum)
            $i = gensub(/^(w:)([0-9]+)/, highlight("COLOR_TASKNUM") "\\1" newTaskNum highlightend("COLOR_TASKNUM", lineColor), " ", $i)
        }
    }
    $0 = gensub(/ (@[^ ]*)/, " " highlight("COLOR_CONTEXT") "\\1" highlightend("COLOR_CONTEXT", lineColor), "g")
    $0 = gensub(/ (\+[^ ]*)/, " " highlight("COLOR_PROJECT") "\\1" highlightend("COLOR_PROJECT", lineColor), "g")
    $0 = gensub(/ ([0-9]{4}-[0-9]{2}-[0-9]{2}) /, " " highlight("COLOR_DATE") "\\1" lineColor " ", "")

    print
}
'
else
cat
fi
