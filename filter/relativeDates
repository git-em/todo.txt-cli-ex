#!/bin/bash
awk --re-interval -v date=$1 '
function highlight(colorVar,      color) {
    color = ENVIRON[colorVar]
    gsub(/\\+033/, "\033", color)
    return color
}
function getThreshold(date) {
    if (date == "") {
        return mktime(strftime("%Y %m %d 00 00 00", systime()))
    } else {
        return mktime(gensub(/([0-9]{4})-([0-9]{2})-([0-9]{2})/, "\\1 \\2 \\3 00 00 00", "", date))
    }
}
function relativeDate(date,      secondsSpan, daySpan, isInFuture) {
    if (date > threshold) {
        secondsSpan = date - threshold
        isInFuture = 1
    } else {
        secondsSpan = threshold - date
        isInFuture = 0
    }
    daySpan = int(secondsSpan / 86400)

    if (daySpan == 0) return "today"
    else if (daySpan == 1) return (isInFuture ? "tomorrow" : "yesterday")
    else if (daySpan == 7) return "(" (isInFuture ? "in " : "") "one week" (isInFuture ? "" : " ago") ")"
    else if (daySpan == 14) return "(" (isInFuture ? "in " : "") "two weeks" (isInFuture ? "" : " ago") ")"
    else if (daySpan < 14) return "(" (isInFuture ? "in " : "") daySpan " days" (isInFuture ? "" : " ago") ")"
    else return ""
}
function afterSpan(daySpan) {
    if (daySpan == 0) return "from same day"
    else if (daySpan == 1) return "from day before"
    else return sprintf("after %s days", daySpan)
}
BEGIN {
    threshold = getThreshold(date)
}
/[0-9]+ x / {
    netTask = substr($0, length(highlight("COLOR_DONE")) + 1)
    if (match(netTask, /[0-9]+ x ([0-9]{4}-[0-9]{2}-[0-9]{2} ){2}/)) {
        # Summarize done tasks into (relative?) date + days until done. 
        doneDate = mktime(gensub(/^.* x ([0-9]{4})-([0-9]{2})-([0-9]{2}) .*$/, "\\1 \\2 \\3 00 00 00", "", $0))
        addDate = mktime(gensub(/^.* x [0-9]{4}-[0-9]{2}-[0-9]{2} ([0-9]{4})-([0-9]{2})-([0-9]{2}) .*$/, "\\1 \\2 \\3 00 00 00", "", $0))

        daySpan = int((doneDate - addDate) / 86400)
        newDoneDate = gensub(/^\((.*)\)$/, "\\1", "", relativeDate(doneDate))

        newDate = (newDoneDate == "" ? gensub(/^.* x ([0-9]{4}-[0-9]{2}-[0-9]{2}).*$/, "\\1", "", $0) : newDoneDate) ", " afterSpan(daySpan)
        $0 = gensub(/([0-9]+ x )([0-9]{4}-[0-9]{2}-[0-9]{2} ){2}/, "\\1 (" newDate ") ", "")
    }
}
{
    for (i = 1; i <= NF; i++) {
        # Note: The date may already have been highlighted, so we can only make
        # very few assumptions about the delimiters. 
        dateString = gensub(/^(.*[^[:alpha:]])?([[:alpha:]]:)?([0-9]{4})-([0-9]{2})-([0-9]{2})([^0-9].*)?$/, "\\3 \\4 \\5 00 00 00", "", $i)
        if (dateString == $i) continue
        newDate = relativeDate(mktime(dateString))
        if (newDate != "")
            $i = gensub(/([[:alpha:]]:)?([0-9]{4})-([0-9]{2})-([0-9]{2})/, "\\1" newDate, "", $i)
    }
    print
}
'
