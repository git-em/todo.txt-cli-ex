#!/bin/bash
export TODOTXT_FILTER_SCHEDULED_PRIO=${TODOTXT_FILTER_SCHEDULED_PRIO:-1}

# Attention: This filter is to be used in pre_filter_command, before formatting
# and coloring of priorities. It won't work as a TODOTXT_FINAL_FILTER! 
if [ $TODOTXT_FILTER_SCHEDULED_PRIO -ne 0 ]; then
    awk --re-interval -v date=$1 '
function getThreshold(date) {
    if (date == "") {
        return mktime(strftime("%Y %m %d 00 00 00", systime()))
    } else {
        return mktime(gensub(/([0-9]{4})-([0-9]{2})-([0-9]{2})/, "\\1 \\2 \\3 00 00 00", "", date))
    }
}
BEGIN {
    threshold = getThreshold(date)
}
/ *[0-9]+ x / {
    # Do not process done tasks. 
    print
    next
}
/ [[:upper:]]:[0-9]{4}-[0-9]{2}-[0-9]{2}/ {
    # Later dates have precedence over earlier ones. If multiple priorities are
    # scheduled on the same date, the last one wins. 
    bestDate = ""
    bestPrio = ""
    for (i = 1; i <= NF; i++) {
        dateString = gensub(/^[[:upper:]]:([0-9]{4})-([0-9]{2})-([0-9]{2})/, "\\1 \\2 \\3 00 00 00", "", $i)
        if (dateString == $i) continue

        date = mktime(dateString)
        if (date > threshold) {
            # Not yet applicable. 
            continue
        }

        if (date >= bestDate) {
            bestDate = date
            bestPrio = substr($i, 1, 1)
        }
    }

    if (bestPrio != "") {
        $0 = gensub(/^( *[0-9]+ )(\(.\) )?/, "\\1(" bestPrio ") ", "")
    }
}
/ d:[0-9]{4}-[0-9]{2}-[0-9]{2}/ {
    date = mktime(gensub(/^.* d:([0-9]{4})-([0-9]{2})-([0-9]{2})([^0-9].*)?$/, "\\1 \\2 \\3 00 00 00", ""))
    if (date <= threshold) {
        $0 = gensub(/^( *[0-9]+ )\(.\) /, "\\1", "")
    }
}
{ print }
'
else
    cat
fi
