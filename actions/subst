#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM# PATTERN REPLACEMENT"
    echo "      Replaces PATTERN with REPLACEMENT on line ITEM#."
    echo ""
    exit
}

shopt -s extglob
errmsg="usage: $TODO_SH $(basename $0) ITEM# PATTERN REPLACEMENT"
item=$1; shift

[ -z "$item" ] && die "$errmsg"
[[ "$item" = +([0-9]) ]] || die "$errmsg"
# Get task without potential priority. 
todo=$(sed -e "$item!d" -e "s/^(.) //" "$TODO_FILE")
[ -z "$todo" ] && die "TODO: No task $item."

if [[ $# -ne 2 && $TODOTXT_FORCE = 0 ]]; then
    echo -n "Pattern: "
    read pattern
    echo -n "Replacement: "
    read replacement
else
    pattern=$1
    replacement=$2
fi

# XXX: Find a separator that doesn't occur in $pattern, sed cannot handle it,
# and escaping doesn't work. 
for sep in '%' '#' '@' ':' '!' '|'
do
    [[ "$pattern" = *${sep}* ]] || break
done
newtodo=$(echo "$todo" | sed "s${sep}${pattern}${sep}${replacement}${sep}g")
if [ "$newtodo" = "$todo" ]; then
    [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item: $todo"
    die "TODO: No replacement done for $pattern"
fi
"$TODO_FULL_SH" command replace $item "$newtodo"
