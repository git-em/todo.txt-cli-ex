#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0)"
    echo "      Un-marks the last done task(s) in todo.txt so that they become"
    echo "      active again."
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...]"
    echo "      Un-marks done task(s) on line ITEM# in todo.txt so that they become"
    echo "      active again."
    echo ""
    exit
}

shopt -s extglob
errmsg="usage: $TODO_SH $(basename $0) [ITEM#[, ITEM#, ITEM#, ...]]"

if [ $# -eq 0 ]; then
    [ -r ~/.todo-lastdone ] || die "TODO: No undo information available!"
    items=$(cat ~/.todo-lastdone)
    rm ~/.todo-lastdone
    [ "$items" ] || die "TODO: No undo information available!"
else
    # Split multiple undo's, if comma separated change to whitespace separated. 
    items=$(echo $* | tr ',' ' ')
fi

# Loop the 'undo' function for each task. 
for item in $items; do 
    [ -z "$item" ] && die "$errmsg"
    [[ "$item" = +([0-9]) ]] || die "$errmsg"

    todo=$(sed "$item!d" "$TODO_FILE")
    [ -z "$todo" ] && die "TODO: No task $item. Has it been archived?"

    # Check if this task has already been done. 
    if [ "${todo:0:2}" = 'x ' ]; then
        # Remove done "x" marker and timestamp. 
        sed -i.bak $item"s|^x [0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} ||" "$TODO_FILE"
        if [ $TODOTXT_VERBOSE -gt 0 ]; then
            sed "$item!d" "$TODO_FILE"
            echo "TODO: $item re-activated."
        fi

        "$TODO_FULL_SH" uncomment -q "$item"
    else
        echo "TODO: $item is not marked done. Has it been archived?"
    fi
done
