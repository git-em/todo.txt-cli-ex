#!/bin/bash

action=$1
shift

function usage(){
    echo "    $(basename $0) ITEM#"
    echo "      Searches for a URL in the task text and launches a browser."
    echo "    $(basename $0) [TERM...]"
    echo "      Displays all tasks that contain an URL and TERM(s)."
    echo ""
    exit
}

[ "$action" = "usage" ] && usage

if [[ ! "$1" =~ ^[0-9]+$ ]]; then
    post_filter_command="grep '[a-z]\\+://[^ ]\\+'"
    _list "$TODO_FILE" "$@"
    exit 0
fi

getTodo "$1"
URL=$(echo "$todo" | grep -o '[a-z]\+://[^ ]\+')
if [ -z "$URL" ]; then
    [ $TODOTXT_VERBOSE -gt 0 ] && echo "$1 $todo"
    die "TODO: No URL found in task $1."
fi

# Trying to be smart...
# on Debian alike:
if [ "$TODOTXT_BROWSER" ]; then
    exec "$TODOTXT_BROWSER" "$URL"
elif $(which x-www-browser >/dev/null 2>&1); then
    exec x-www-browser "$URL"
# with freedesktop.org utils:
elif $(which xdg-open >/dev/null 2>&1); then
    exec xdg-open "$URL"
# if you have git:
elif [ -x /usr/lib/git-core/git-web--browse ]; then
    cd /usr/lib/git-core && ./git-web--browse "$URL"
# last resort, a la mano...
elif $(which firefox >/dev/null 2>&1); then
    exec firefox "$URL"
elif $(which konqueror >/dev/null 2>&1); then
    exec konqueror "$URL"
elif $(which nautilus >/dev/null 2>&1); then
    exec nautilus "$URL"
# Windowsien?
elif [ -x "/cygdrive/c/Program Files/Mozilla Firefox/firefox.exe" ]; then
    exec "/cygdrive/c/Program Files/Mozilla Firefox/firefox.exe" "$URL"
# OS X?
elif [ -x "/usr/bin/open" ]; then
    exec "/usr/bin/open" "$URL"
else
    echo "Sorry I'm giving up, cannot find your browser :-("
    echo "Under cygwin, consider creating a shortcut in the path, like"
    echo "ln -s \"/cygdrive/c/Program Files/Mozilla Firefox/firefox.exe\" /usr/local/bin/firefox"

    exit 1
fi
