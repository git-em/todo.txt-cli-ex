#!/bin/bash
###############################################################################
##
# FILE:         gsubst
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 20-Dec-2013
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2013 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)gsubst	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) PATTERN REPLACEMENT [PATTERN REPLACEMENT ...]"
    echo "      Replaces all instances of (sed-style) PATTERN with REPLACEMENT"
    echo "      on ALL lines in todo.txt."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) PATTERN REPLACEMENT [PATTERN REPLACEMENT ...]"

typeset -a replacements=()
buildReplacement()
{
    cleaninput
    input=${input//%/\\%}
    # Above takes care of the replacement; for the pattern, we only have to escape
    # the substitution delimiter, as it's supposed to be an sed regexp.
    # Note: Use a substitution delimiter that has no special meaning as a regexp
    # symbol. For example, "|" causes problems when it is contained in pattern
    # (e.g. /\(^\| \)/), and then mistakenly double-escaped.
    replacements+=(-e "s%${pattern//%/\\%}%${input}%g")
}

pattern=
input=
if [[ $# -lt 2 && $TODOTXT_FORCE = 0 ]]; then
    IFS=$'\n' read -p "Pattern: " pattern
    [ "$pattern" ] || exit 1
    IFS=$'\n' read -p "Replacement: " input
    buildReplacement
fi

while [[ $# -ge 2 ]]
do
    pattern=$1
    input=$2
    shift; shift
    buildReplacement
done


answer=y
if  [ $TODOTXT_FORCE = 0 ]; then
    affectedLines=$(cat "$TODO_FILE" | sed -n "${replacements[@]/%g/gp}")
    if [ "$affectedLines" ]; then
        echo "TODO: Affected lines:"
        echo "$affectedLines"
        read -p "Make those replacements? (y/n) " answer
    else
        die "TODO: The pattern does not match in any line."
    fi
fi
if [ "$answer" = 'y' ]; then
    sed -i.bak "${replacements[@]}" "$TODO_FILE" || die $?
    if [ $TODOTXT_VERBOSE -gt 0 ]; then
        lineCnt=$(echo "$affectedLines" | wc -l)
        echo "TODO: $lineCnt tasks updated."
    fi
else
    exit 1
fi
