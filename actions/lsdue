#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) [DATE] [TERM...]"
    echo "      Displays all tasks that have a t:date \"scheduled\" or T:date"
    echo "      \"latest\" marker attached and are due on DATE (or now)."
    echo "      If TERM specified, lists only tasks that contain TERM."
    echo ""
    exit
}

threshold=
summary='due \0'
if [ $# -ge 1 ]; then
    # Check whether the first argument represents a date. 
    threshold=$(date -d "$1" +%F 2>/dev/null)
    [ "$threshold" ] && { shift; summary="tasks due on $threshold shown"; }
fi

# Undo the effect of a possible -x option; we need the filter to only show the
# due tasks. 
export TODOTXT_DISABLE_FILTER=0

# Also ensure that the correct filter is set, and pass the optionally set
# threshold. 
if [[ "$TODOTXT_FINAL_FILTER" != *utureTasks* ]]; then
    if [ "$TODOTXT_FINAL_FILTER" == 'cat' ]; then
	TODOTXT_FINAL_FILTER="$HOME/.todo/futureTasks $threshold"
    else
	TODOTXT_FINAL_FILTER="$HOME/.todo/futureTasks $threshold ${TODOTXT_FINAL_FILTER:+|} ${TODOTXT_FINAL_FILTER}"
    fi
else
    TODOTXT_FINAL_FILTER=${TODOTXT_FINAL_FILTER/utureTasks/utureTasks $threshold}
fi

# Consider only tasks that are not yet done and contain the "t:" schedule
# or "T:" latest markers. The tasks are already numbered when the filter is
# applied, so there definitely is a space in front of the marker. 
post_filter_command="grep -ve '^ *[0-9]\+ x ' | grep ${TODOTXT_LSDUE_TASKINCLUSION} -e ' [tT]:[0-9]\{2,4\}[^A-Za-z0-9][0-9]\{2,4\}[^A-Za-z0-9][0-9]\{2,4\}'" # not enforcing any particular format

if [ "$TODOTXT_LSDUE_TASKINCLUSION" ]; then
    _list "$TODO_FILE" "$@"
else
    _list "$TODO_FILE" "$@" | sed -e "/^TODO:/s/of [0-9]\+ tasks shown/${summary}/"
fi
