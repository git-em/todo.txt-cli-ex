#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...]"
    echo "      Unblock the task(s) on line ITEM#"
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...] PRIORITY"
    echo "      Unblock the task(s) on line ITEM# and prioritize as PRIORITY."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...] [PRIORITY]"

[ $# -eq 0 ] && die "$errmsg"

items=
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items="$items $1"
    shift
done
[ "$items" ] || die "$errmsg"

pri=
if [[ "$1" = [a-zA-Z] ]]; then
    pri=$1
    shift
fi

[ $# -eq 0 ] || die "$errmsg"

# Split multiple unwait's, if comma separated change to whitespace separated. 
set -o pipefail
for item in `echo $items | tr ',' ' '`; do 
    wasWaiting=
    TODOTXT_VERBOSE=0 "$TODO_FULL_SH" subst $item ' w:([^)]*)'  '' && wasWaiting='true'
    TODOTXT_VERBOSE=0 "$TODO_FULL_SH" subst $item ' w:[^ \t]\+' '' && wasWaiting='true'
    if [ "$wasWaiting" ]; then
        if [ $TODOTXT_VERBOSE -gt 0 ]; then
            newtodo=$(sed "$item!d" "$TODO_FILE")
            echo "$item $newtodo"
            echo "TODO: $item unblocked."
        fi
    else
        echo >&2 "TODO: $item not blocked"
        continue
    fi

    if [ "$pri" ]; then
        "$TODO_FULL_SH" command pri $item $pri
    fi
done | grep -v '^No replacement done for'
