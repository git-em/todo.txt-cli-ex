#!/bin/bash
###############################################################################
##
# FILE:         uncomment
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 29-Dec-2011
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2012 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)uncomment	001	(24-Feb-2012)	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) [-q] ITEM#"
    echo "      Removes the done / trashed comment on task ITEM#."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) [-q] ITEM#"

: ${TODOTXT_COMMENT_SYMBOL:= => }

isSilentAndQuery=
if [ "$1" = '-q' ]; then
    isSilentAndQuery='true'
    shift
fi
item=$1; shift

getTodo "$item"
newtodo=${todo%%${TODOTXT_COMMENT_SYMBOL}*}
if [ "$isSilentAndQuery" ]; then
    [ "$newtodo" = "$todo" ] && exit 0
    comment=${todo#*${TODOTXT_COMMENT_SYMBOL}}
    if [ "$comment" ]; then
        read -p "Remove comment \"${comment}\"? (y/n) " answer
    else
        read -p "Remove empty comment? (y/n) " answer
    fi

    [ "$answer" = 'y' ] || exit 0
fi

[ "$newtodo" ] || die "TODO: Removal of comment would create empty task."

if [ "$newtodo" = "$todo" ]; then
    [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $todo"
    die "TODO: Task $item does not contain a comment."
fi
"$TODO_FULL_SH" command replace $item "$newtodo"
