#!/bin/bash
###############################################################################
##
# FILE:         summary
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 28-Jun-2010
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2012 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)summary	002	(13-Apr-2012)	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) [TERM...]"
    echo "      Displays detailed summary of tasks."
    echo "      If TERM specified, considers only tasks that contain TERM(s)."
    echo ""
    exit
}

export TODOTXT_VERBOSE=0    # Turn off the list footer.

totalNum=$(sed -ne '$ =' "$TODO_FILE")   # Total task number, not just the ones matching TERM.
if [ $# -eq 0 ]; then
    listNum=$totalNum
    totalMessage=
else
    listNum=$("$TODO_FULL_SH" -p -x command ls "$@" | wc -l) # All tasks, including future and done.
    totalMessage=" ($((listNum * 100 / totalNum))%), ${totalNum} total"
fi
dueNum=$("$TODO_FULL_SH" -p lsdue "$@" | wc -l)  # All tasks that are due now.
# The following usually do not include future tasks, but this is depending on the active filter.
doneNum=$("$TODO_FULL_SH" -p lsdo "$@" | wc -l)  # All tasks marked with "x".
trashedNum=$("$TODO_FULL_SH" -p lstrashable "$@" | wc -l)  # All tasks marked with "X".
prioNum=$("$TODO_FULL_SH" -p lsp "$@" | wc -l)   # All prioritized tasks.
waitNum=$("$TODO_FULL_SH" -p lswait "$@" | wc -l) # All tasks marked with "w:..." marker.

activeNum=$(
    # Ignore done and trashed tasks.
    # Undo the effect of a possible -x option; we need the filter to only show the
    # due tasks.
    # Also ensure that the correct final filter is set.
    post_filter_command="grep -v -e '^ *[0-9]\+ [xX] ' -e ' w:[^ ]'" \
    TODOTXT_DISABLE_FILTER=0 \
    TODOTXT_FINAL_FILTER="${TODO_FILTER_DIR:?}/futureTasks" \
        "$TODO_FULL_SH" -p command ls "$@" | wc -l
)    # All tasks not done, trashed, future, or waiting.

futureNum=$((listNum - activeNum - waitNum - doneNum - trashedNum))  # All tasks that will only come due in the future.
# When the futureTasks filter isn't enabled, this will be 0.

today=$(date +%F)
addedTodayNum=$("$TODO_FULL_SH" -p ls "^ *[0-9]\\+ \\((.) \\)\\?$today " "$@" | wc -l) # All (potentially prioritized) active tasks added today.
doneTodayNum=$("$TODO_FULL_SH" -p lsdone "^ *[0-9]\\+ x $today " "$@" | wc -l) # All (archived and from todo.txt) tasks done today.

waitReasons=
if [ $waitNum -gt 0 ]; then
    waitReasons=$("$TODO_FULL_SH" listblockers "$@" | sed -n -e '1h' -e '1!H' -e '$g' -e '$s/\n/, /g' -e '$p')
fi



echo "TODO: ${listNum} tasks${totalMessage}, ${prioNum} prioritized, ${dueNum} due"
echo "TODO: ${activeNum} open, ${waitNum} waiting, ${futureNum} future, ${trashedNum} trashed, ${doneNum} done"

if [ $addedTodayNum -eq 0 -a $doneTodayNum -eq 0 ]; then
    echo "TODO: No tasks added or done today yet."
else
    addedText=
    [ $addedTodayNum -gt 0 ] && addedText="added +${addedTodayNum}"
    doneText=
    [ $doneTodayNum -gt 0 ] && doneText="${addedText:+ / }done -${doneTodayNum}"
    echo "TODO: Today ${addedText}${doneText}"
fi

if [ "$waitReasons" ]; then
    echo "TODO: waiting for $waitReasons"
fi
