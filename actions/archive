#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) KEYWORD"
    echo "      Moves done tasks containing KEYWORD from todo.txt to done.txt and"
    echo "      trashed tasks to trash.txt and removes blank lines."
    echo "    $(basename $0) ITEM#"
    echo "      Moves task number ITEM# and removes blank lines."
    echo "      Note that if KEYWORD is a number it is considered as an ITEM# number"
    echo ""
    exit
}

TRASH_FILE=${TRASH_FILE:-$TODO_DIR/trash.txt}
trashItems=

if [[ "$1" =~ ^[0-9]+$ ]]; then
    item=$1 # we got a task to archive
    what=$item

    getTodo "$item"
    [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $todo"
    echo "$todo" >> "$DONE_FILE"
    sed -i.bak $item"s/^.*//" "$TODO_FILE"
else
    keyword=$1 # we got a keyword, or nothing
    what="$(grep -c "^x .*$keyword" "$TODO_FILE") task(s)"
    if [ $TODOTXT_VERBOSE -gt 0 ]; then
        post_filter_command="grep -e '^ *[0-9]\+ x '"
        TODOTXT_VERBOSE=0 TODOTXT_DISABLE_FILTER=1 _list "$TODO_FILE" "$keyword" "$@"
    fi
    grep "^x .*$keyword" "$TODO_FILE" >> "$DONE_FILE"
    sed -i.bak "/^x .*$keyword/s/^.*//" "$TODO_FILE"

    trashItems=$(cat "$TODO_FILE" | "$HOME/.todo/trashedTasks" | sed -n -e '/^$/b' -e "/${keyword:-.}/=")
fi
[ $TODOTXT_VERBOSE -gt 0 ] && echo "TODO: $what archived."

if [ "$trashItems" ]; then
    eval '"$TODO_FULL_SH" trash' ${trashItems//$'\n'/ }
fi

if [ $# -eq 0 ]; then
    # This is a complete, regular archive. 
    # Use this occasion to make a backup. 
    if type -P writebackup.sh >/dev/null; then
        readonly TODO_BACKUPDIR="${TODO_DIR}.backup/"
        if [ -d "$TODO_BACKUPDIR" ]; then
            cp -f "$TODO_FILE" "${TODO_BACKUPDIR}/todo.txt"
            writebackup.sh "${TODO_BACKUPDIR}/todo.txt"
        else
            writebackup.sh "$TODO_FILE"
        fi
    fi
fi

# Defragment blank lines. 
if [ -x "$TODO_ACTIONS_DIR/defragment" ]; then
    # We have a customized defragment script that not only removes the empty
    # lines, but also adapts cross-task references; use it. 
    "$TODO_FULL_SH" defragment
else
    sed -i.bak -e '/./!d' "$TODO_FILE"
fi
