#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...] [COMMENT]"
    echo "      Marks task(s) on line ITEM# as done in todo.txt, appending COMMENT."
    echo "      Task(s) that were dependent on ITEM# have that blocker removed."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...] [COMMENT]"
[ $# -eq 0 ] && die "$errmsg"

items=
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items="$items $1"
    shift
done
[ "$items" ] || die "$errmsg"

printf '' > ~/.todo-lastdone
for item in `echo $items | tr ',' ' '`
do 
    if [ $# -gt 0 ]; then
        "$TODO_FULL_SH" command append $item "$@" || exit $?
    fi

    "$TODO_FULL_SH" command 'do' $item || exit $?
    printf '%s ' $item >> ~/.todo-lastdone

    if [ -x "$TODO_ACTIONS_DIR/unwait" ]; then
        # Unblock tasks that depended on the now done task. 
        "$TODO_FULL_SH" unwait 'for' $item | grep -v '^TODO: No tasks that contain the dependent tasks found.$'
        : # Always exit with a successful exit code even when the "todo.txt unwait" command complained. 
    fi
done
