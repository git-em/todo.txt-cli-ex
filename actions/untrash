#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) last|ITEM#[, ITEM#, ITEM#, ...]"
    echo "      Puts the trashed task(s) on line ITEM# back to todo.txt."
    echo ""
    exit
}

shopt -s extglob
errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...]"

TRASH_FILE=${TRASH_FILE:-$TODO_DIR/trash.txt}
BASE=$(basename "$TRASH_FILE")
PREFIX=$(echo ${BASE%%.[^.]*} | tr [a-z] [A-Z])

[ $# -eq 0 ] && die "$errmsg"

cleanup()
{
    # Finally delete the marked lines. 
    sed -i.bak -e '/^!DELETED$/d' "$TRASH_FILE"
}
trap 'cleanup' EXIT

# Split multiple untrash's, if comma separated change to whitespace separated. 
# Loop the 'untrash' function for each task. 
for item in $(echo $* | tr ',' ' '); do 
    [ -z "$item" ] && die "$errmsg"
    [ "$item" = 'last' ] && item=$(sed -n '$ =' "$TRASH_FILE") 
    [[ "$item" = +([0-9]) ]] || die "$errmsg"

    todo=$(sed "$item!d" "$TRASH_FILE")
    [ -z "$todo" ] && die "$PREFIX: No task $item."

    # Move task to todo.txt, without the "trashed on" timestamp that has been
    # prepended by the 'trash' command. 
    sed -e "$item!d" -e $item's/^[0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} //' "$TRASH_FILE" >> "$TODO_FILE"

    # Delete line (changes line numbers, but that's okay in the trash). 
    # Note: Cannot actually remove lines inside the loop, as this may make
    # following task numbers invalid. 
    sed -i.bak -e $item"s/^.*/!DELETED/" "$TRASH_FILE"

    if [ $TODOTXT_VERBOSE -gt 0 ]; then
        TASKNUM=$(sed -n '$ =' "$TODO_FILE")
        newtodo=$(sed "$TASKNUM!d" "$TODO_FILE")
        echo "$PREFIX: $item untrashed to $TASKNUM."
        echo "$TASKNUM: $newtodo"
    fi
done
