#!/bin/bash
###############################################################################
##
# FILE:         dopart
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 22-Nov-2013
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2013 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)dopart	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM# PART# [COMMENT]"
    echo "      Marks the part with count PART# (determined by splitting on [,;] and the"
    echo "      word \"and\") of the line ITEM# as done, optionally appending COMMENT."
    echo "    $(basename $0) ITEM# PATTERN [COMMENT]"
    echo "      Marks the part the line ITEM# that matches PATTERN as done, optionally"
    echo "      appending COMMENT."
    echo ""
    exit
}

: ${TODOTXT_PARTIALDONE_PATTERN='\([^()]+ => [0-9]{4}-[0-9]{2}-[0-9]{2}( [^()]+)?\)'}
: ${TODOTXT_PARTIALDONE_TEMPLATE='(%s => %s)'}
: ${TODOTXT_PARTIALDONE_TEMPLATE_WITH_COMMENT='(%s => %s %s)'}
shopt -s extglob

splitTodo()
{
    prepends=$(echo "${1:?}" | sed -e 's/^\([xX] \([0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} \)\{0,1\}\)\{0,1\}\((.) \)\{0,1\}\([0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} \)\{0,1\}\(\([+@][^ ]\+ \+\|[[:graph:]]:\(([^)]\+)\|[^ ]\+\) \+\)\{0,\}\)\(.*$\)/\3\4\5/')
    rest=$(echo "$1" | sed -e 's/^\([xX] \([0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} \)\{0,1\}\)\{0,1\}\((.) \)\{0,1\}\([0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} \)\{0,1\}\(\([+@][^ ]\+ \+\|[[:graph:]]:\(([^)]\+)\|[^ ]\+\) \+\)\{0,\}\)\(.*$\)/\8/')
    text=$(echo "$rest" | sed -e 's/\(\( \+[+@][^ ]\+\| \+[[:graph:]]:\(([^)]\+)\|[^ ]\+\)\)\{0,\}\)$//')
    appends=${rest#"$text"}
}

errmsg="usage: $TODO_SH $(basename $0) ITEM# PART#|PATTERN [COMMENT]"
item=$1; shift
[ -z "$item" ] && die "$errmsg"
[[ "$item" = +([0-9]) ]] || die "$errmsg"
getTodo "$item"

splitTodo "$todo"

if [[ "$1" = +([0-9]) ]]; then
    count=$1
    pattern=',\? \+and \+'
    part=$(echo "$text" | sed -e "s/${pattern}/\\n/g" | sed -ne "${count}p")
    if [ ! "$part" ]; then
        echo "TODO: No such part; available parts:"
        echo "$text" | sed -e "s/${pattern}/\\n/g" | sed = | sed -e 'N; s/\n/ /'
        exit 1
    fi
elif [ "$1" ]; then
    pattern=$1
    case $pattern in
        ^*)     before='';;
        \.\**)  before='^';;
        *)      before='^.*';;
    esac
    case $pattern in
        *\$)    after='';;
        *\.\*)  after='$';;
        *)      after='.*$';;
    esac
    part=$(echo "$text" | sed -ne "s/${before}\(${pattern}\)${after}/\1/gp")
    [ "$part" ] || die "TODO: pattern \"${pattern}\" does not match"
    [ "$part" = "$text" ] && die "TODO: pattern \"${pattern}\" matches the entire task"
else
    die "$errmsg"
fi
shift

if echo "$part" | grep -q -E "^ *${TODOTXT_PARTIALDONE_PATTERN} *$"; then
    die "TODO: That part is already done: $part"
fi



now=$(date '+%Y-%m-%d')
if [ "$*" ]; then
    donePart=$(printf "$TODOTXT_PARTIALDONE_TEMPLATE_WITH_COMMENT" "$part" "$now" "$*")
else
    donePart=$(printf "$TODOTXT_PARTIALDONE_TEMPLATE" "$part" "$now")
fi
input=$donePart
literalPart=$(echo "$part" | sed -e 's/[][\$*.^]/\\&/g')
cleaninput "for sed"
sed -i.bak "$item s|${literalPart}|${input}|" "$TODO_FILE"
getNewtodo "$item"
if [ $TODOTXT_VERBOSE -gt 0 ]; then
    echo "$item $newtodo"
    echo "TODO: part of $item marked as done: ${donePart}"
fi



splitTodo "$newtodo"
remainder=$(echo "$text" | sed -E -e "s/${TODOTXT_PARTIALDONE_PATTERN}//g" -e 's/ and //g' -e 's/[ \t,.;:+-]//g')
if [ ! "$remainder" ]; then
    echo "TODO: All parts are completely done now; marking entire task as done."
    "$TODO_FULL_SH" do $item
fi
