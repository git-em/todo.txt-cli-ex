#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
  echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...]"
  echo "      Puts the task(s) on line ITEM# into trash.txt."
  echo ""
  exit
}

die()
{
    echo "$*"
    exit 1
}

shopt -s extglob
errmsg="usage: $TODO_SH trash ITEM#[, ITEM#, ITEM#, ...]"

[ $# -eq 0 ] && die "$errmsg"
# Split multiple trash's, if comma seperated change to whitespace sepereated
# Loop the 'trash' function for each item
for item in `echo $* | tr ',' ' '`; do 
    [ -z "$item" ] && die "$errmsg"
    [[ "$item" = +([0-9]) ]] || die "$errmsg"

    todo=$(sed "$item!d" "$TODO_FILE")
    [ -z "$todo" ] && die "$item: No such task."

    # Check if this item has already been done. 
    if [ $(echo $todo | grep -c "^x ") -eq 0 ] ; then
        now=`date '+%Y-%m-%d'`
        # Remove priority once item is trashed. 
        sed -i.bak $item"s/^(.) //" "$TODO_FILE"
        # Add timestamp like the 'do' command. 
        sed -i.bak $item"s|^|$now |" "$TODO_FILE"
        # Move item to trash. 
        sed -n $item"p" "$TODO_FILE" >> "${TRASH_FILE:-$TODO_DIR/trash.txt}"
        if [ $TODOTXT_PRESERVE_LINE_NUMBERS = 0 ]; then
            # delete line (changes line numbers)
            sed -i.bak -e $item"s/^.*//" -e '/./!d' "$TODO_FILE"
        else
            # leave blank line behind (preserves line numbers)
            sed -i.bak -e $item"s/^.*//" "$TODO_FILE"
        fi
        [ $TODOTXT_VERBOSE -gt 0 ] && echo "TODO: '$todo' put into trash."
    else
        echo "$item is already marked done"
    fi
done
