#!/bin/bash

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...]|all [on DATE|DATE-]"
    echo "    $(basename $0) [on DATE|DATE-] ITEM#[, ITEM#, ITEM#, ...]|all"
    echo "      Deprioritizes (removes the priority) from the task(s)"
    echo "      on line ITEM# in todo.txt, or all prioritized tasks."
    echo "      With -DATE, the task will be deprioritized on DATE (via d:DATE)."
    echo "    $(basename $0) [never|on none] ITEM#[, ITEM#, ITEM#, ...]|all"
    echo "      Removes the d:DATE depriorization on a date."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...]|all [never|on none|on DATE|DATE-]"
[ $# -eq 0 ] && die "$errmsg"

makeDate()
{
    date -d "$1" +%F
}

items=
endDate=

while [ $# -gt 0 ]
do
    case "$1" in
	never)	endDate='never'; shift;;
	on)	if [ "$2" = 'none' -o "$2" = 'never' ]; then
		    endDate='never'; shift; shift
		else
		    endDate=$(makeDate "$2") || exit 1; shift; shift
		fi
		;;
	[^-]*-) endDate=$(makeDate "${1%-}") || exit 1; shift;;
	*)	break;;
    esac
done
if [ "$1" = 'all' ]; then
    shift
    items=$(sed -ne '/^(\(.\)) /=' "$TODO_FILE")
    [ "$items" ] || die "TODO: No prioritized tasks."
else
    while [[ "$1" =~ ^[,0-9]+$ ]]
    do
	items="$items $1"
	shift
    done
fi
while [ $# -gt 0 ]
do
    case "$1" in
	never)	endDate='never'; shift;;
	on)	if [ "$2" = 'none' -o "$2" = 'never' ]; then
		    endDate='never'; shift; shift
		else
		    endDate=$(makeDate "$2") || exit 1; shift; shift
		fi
		;;
	[^-]*-) endDate=$(makeDate "${1%-}") || exit 1; shift;;
	*)	break;;
    esac
done

[ "$items" ] || die "$errmsg"

if [ "$endDate" ]; then
    for item in $(echo $items | tr ',' ' '); do 
	getTodo "$item"

	if [ "$endDate" = 'never' ]; then
	    # Remove existing date-depriorization. 
	    newtodo=$(echo "$todo" | sed -e "s| d:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}||") || exit 1
	else
	    # Replace existing date-depriorization with the same deprioritization
	    # in-place or append new date-depriorization. 
	    newtodo=$(echo "$todo" | sed -e "s| d:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}| d:${endDate}|" -e t -e "s| *\$| d:${endDate}|") || exit 1
	fi

	input=$newtodo
	cleaninput "for sed"
	sed -i.bak "$item s|^.*|${input}|" "$TODO_FILE"

	if [ "$newtodo" = "$todo" ]; then
	    [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $newtodo"
	    die "TODO: Priorization didn't change."
	fi
	if [ $TODOTXT_VERBOSE -gt 0 ]; then
	    echo "$item $newtodo"
	    if [ "$endDate" = 'never' ]; then
		echo "TODO: $item will never be deprioritized."
	    else
		echo "TODO: $item will be deprioritized on $endDate."
	    fi
	fi
    done
else
    "$TODO_FULL_SH" command depri $items
fi
